name: Deploy SKULD to Hetzner

on:
  push:
    branches: [ docker ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup SSH Key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.DEPLOY_SSH_KEY }}" > ~/.ssh/deploy_key
          chmod 600 ~/.ssh/deploy_key
          ssh-keyscan -H ${{ secrets.DEPLOY_HOST }} >> ~/.ssh/known_hosts

      - name: Sync application files to server
        run: |
          rsync -avz --delete \
            -e "ssh -i ~/.ssh/deploy_key -o StrictHostKeyChecking=no" \
            --exclude 'db/' \
            --exclude 'logs/' \
            --exclude '.git/' \
            --exclude '.github/' \
            --exclude '__pycache__/' \
            --exclude '*.pyc' \
            --exclude '.gitignore' \
            ./ ${{ secrets.DEPLOY_USER }}@${{ secrets.DEPLOY_HOST }}:/opt/skuld/

      - name: Build and deploy Docker container
        run: |
          ssh -i ~/.ssh/deploy_key -o StrictHostKeyChecking=no \
            ${{ secrets.DEPLOY_USER }}@${{ secrets.DEPLOY_HOST }} << 'ENDSSH'
            set -euo pipefail
            cd /opt/skuld
            
            echo "🔄 Current directory contents:"
            ls -la
            
            echo "🏗️ Building Docker image..."
            echo '${{ secrets.DEPLOY_PASSWORD }}' | sudo -S docker compose build --pull
            
            echo "🚀 Deploying container..."
            echo '${{ secrets.DEPLOY_PASSWORD }}' | sudo -S docker compose up -d --remove-orphans
            
            echo "🧹 Cleaning up old images..."
            echo '${{ secrets.DEPLOY_PASSWORD }}' | sudo -S docker image prune -f
            
            echo "✅ Deployment complete. Container status:"
            echo '${{ secrets.DEPLOY_PASSWORD }}' | sudo -S docker compose ps
            
            echo "📋 Last 20 log lines:"
            echo '${{ secrets.DEPLOY_PASSWORD }}' | sudo -S docker compose logs --tail=20
          ENDSSH
          
          


