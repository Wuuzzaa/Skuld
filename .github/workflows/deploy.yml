name: Deploy SKULD to Hetzner

on:
  push:
    branches: [ docker ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup SSH Key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.DEPLOY_SSH_KEY }}" > ~/.ssh/deploy_key
          chmod 600 ~/.ssh/deploy_key
          # Nur EINMAL ssh-keyscan (statt bei jedem rsync/ssh)
          ssh-keyscan -H ${{ secrets.DEPLOY_HOST }} >> ~/.ssh/known_hosts

      - name: Deploy everything in one SSH session
        run: |
          # Tar Archive erstellen (lokal)
          tar czf /tmp/skuld.tar.gz \
            --exclude='db' \
            --exclude='logs' \
            --exclude='.git' \
            --exclude='.github' \
            --exclude='__pycache__' \
            --exclude='*.pyc' \
            .
          
          # EINE SSH Session: Upload + Extract + Deploy
          cat /tmp/skuld.tar.gz | ssh -i ~/.ssh/deploy_key -o StrictHostKeyChecking=no \
            ${{ secrets.DEPLOY_USER }}@${{ secrets.DEPLOY_HOST }} \
            'bash -s' << 'ENDSSH'
            set -euo pipefail
            
            echo "üì¶ Receiving and extracting files..."
            cd /opt/skuld
            cat > /tmp/skuld.tar.gz
            tar xzf /tmp/skuld.tar.gz
            rm /tmp/skuld.tar.gz
            
            echo "üèóÔ∏è Building Docker image..."
            sudo docker compose build --pull
            
            echo "üöÄ Deploying container..."
            sudo docker compose up -d --remove-orphans
            
            echo "üßπ Cleaning up old images..."
            sudo docker image prune -f
            
            echo "‚úÖ Deployment complete:"
            sudo docker compose ps
            sudo docker compose logs --tail=20
          ENDSSH

          